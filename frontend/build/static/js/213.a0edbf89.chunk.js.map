{"version":3,"file":"static/js/213.a0edbf89.chunk.js","mappings":"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","sources":["sections/Dashboard/Settings/ThemeDialog.js","pages/dashboard/Settings/index.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Dialog,\n  Slide,\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n} from \"@mui/material\";\nimport { useTheme } from \"@mui/material/styles\";\nimport useSettings from \"../../../hooks/useSettings\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst ThemeDialog = ({ open, handleClose }) => {\n  const theme = useTheme();\n  const { onToggleMode } = useSettings();\n\n  return (\n    <>\n      <Dialog\n        fullWidth\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle sx={{\n          mb: 2,\n          backgroundColor:\n            theme.palette.mode === \"light\"\n              ? \"#F8FAFF\"\n              : theme.palette.background,\n\n          boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n        }}>{\"Choose Theme\"}</DialogTitle>\n        <DialogContent>\n          <FormControl>\n            <RadioGroup\n              aria-labelledby=\"demo-radio-buttons-group-label\"\n              defaultValue={theme?.palette?.mode}\n              name=\"radio-buttons-group\"\n            >\n              <FormControlLabel\n                value=\"light\"\n                control={<Radio />}\n                label=\"Light\"\n              />\n              <FormControlLabel value=\"dark\" control={<Radio />} label=\"Dark\" />\n              {/* <FormControlLabel\n                value=\"system\"\n                control={<Radio />}\n                label=\"System Default\"\n              /> */}\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={onToggleMode}>\n            Apply\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ThemeDialog;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Divider,\n  IconButton,\n  Stack,\n  Typography,\n} from \"@mui/material\";\n\nimport {\n  CaretLeft,\n  Bell,\n  Lock,\n  Key,\n  PencilCircle,\n  Image,\n  Note,\n  Keyboard,\n  Info,\n} from \"phosphor-react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"@mui/material/styles\";\nimport ThemeDialog from \"../../../sections/Dashboard/Settings/ThemeDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { showSnackbar } from \"../../../redux/slices/app\";\n\nconst Settings = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { user } = useSelector((state) => state.app);\n  const dispatch = useDispatch();\n\n  const [openTheme, setOpenTheme] = useState(false);\n\n  const handleOpenTheme = () => {\n    setOpenTheme(true);\n  };\n\n  const handleCloseTheme = () => {\n    setOpenTheme(false);\n  };\n  const [openShortcuts, setOpenShortcuts] = useState(false);\n\n  const handleOpenShortcuts = () => {\n    setOpenShortcuts(true);\n  };\n\n  const handleCloseShortcuts = () => {\n    setOpenShortcuts(false);\n  };\n\n  const list = [\n    {\n      key: 0,\n      icon: <Bell size={20} />,\n      title: \"Notifications\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 1,\n      icon: <Lock size={20} />,\n      title: \"Privacy\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 2,\n      icon: <Key size={20} />,\n      title: \"Security\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 3,\n      icon: <PencilCircle size={20} />,\n      title: \"Theme\",\n      onclick: handleOpenTheme,\n    },\n    {\n      key: 4,\n      icon: <Image size={20} />,\n      title: \"Chat Wallpaper\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 5,\n      icon: <Note size={20} />,\n      title: \"Request Account Info\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 6,\n      icon: <Keyboard size={20} />,\n      title: \"Keyboard Shortcuts\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n    {\n      key: 7,\n      icon: <Info size={20} />,\n      title: \"Help\",\n      onclick: () => { dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" })) },\n    },\n  ];\n\n  return (\n    <>\n      <Stack direction=\"row\" sx={{ width: \"100%\" }}>\n        {/* LeftPane */}\n        <Box\n          sx={{\n            overflowY: \"scroll\",\n\n            height: \"100vh\",\n            width: 320,\n            backgroundColor:\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background,\n\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n          }}\n        >\n\n          <Stack p={4} spacing={5}>\n            {/* Header */}\n            <Stack direction=\"row\" alignItems={\"center\"} spacing={3}>\n              <IconButton onClick={() => navigate(-1)}>\n                <CaretLeft size={24} color={\"#4B4B4B\"} />\n              </IconButton>\n\n              <Typography variant=\"h5\">Settings</Typography>\n            </Stack>\n\n            {/* Profile */}\n            <Stack direction=\"row\" spacing={3}>\n              <Avatar\n                src={user?.avatar}\n                sx={{ height: 56, width: 56 }}\n              />\n              <Stack spacing={0.5}>\n                <Typography variant=\"article\">{`${user?.firstName} ${user?.lastName}`}</Typography>\n                <Typography variant=\"body2\">{user?.about}</Typography>\n              </Stack>\n            </Stack>\n            {/* List */}\n            <Stack spacing={4}>\n              {list.map(({ key, icon, title, onclick }) => {\n                return (\n                  <>\n                    <Stack\n                      onClick={onclick}\n                      sx={{ cursor: \"pointer\" }}\n                      spacing={2}\n                    >\n                      <Stack alignItems={\"center\"} direction=\"row\" spacing={2}>\n                        {icon}\n                        <Typography variant=\"body2\">{title}</Typography>\n                      </Stack>\n                      {key !== 7 && <Divider />}\n                    </Stack>\n                  </>\n                );\n              })}\n            </Stack>\n          </Stack>\n        </Box>\n        {/* Right Pane */}\n        <Box\n          sx={{\n            height: \"100%\",\n            width: \"calc(100vw - 420px )\",\n            backgroundColor:\n              theme.palette.mode === \"light\"\n                ? \"#FFF\"\n                : theme.palette.background.paper,\n            borderBottom: \"6px solid #0162C4\",\n          }}\n        ></Box>\n      </Stack>\n      {openTheme && (\n        <ThemeDialog open={openTheme} handleClose={handleCloseTheme} />\n      )}\n      {/* {openShortcuts && <ShortcutDialog open={openShortcuts} handleClose={handleCloseShortcuts} />} */}\n\n    </>\n  );\n};\n\nexport default Settings;\n"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","_ref","_theme$palette","open","handleClose","theme","useTheme","onToggleMode","useSettings","_Fragment","children","_jsxs","Dialog","fullWidth","TransitionComponent","keepMounted","onClose","DialogTitle","sx","mb","backgroundColor","palette","mode","background","boxShadow","DialogContent","FormControl","RadioGroup","defaultValue","name","FormControlLabel","value","control","Radio","label","DialogActions","Button","onClick","variant","navigate","useNavigate","user","useSelector","state","app","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","openTheme","setOpenTheme","_useState3","_useState4","list","key","icon","Bell","size","title","onclick","showSnackbar","severity","message","Lock","Key","PencilCircle","Image","Note","Keyboard","Info","Stack","width","Box","overflowY","height","p","spacing","alignItems","IconButton","CaretLeft","color","Typography","Avatar","src","avatar","concat","firstName","lastName","about","map","cursor","Divider","paper","borderBottom","ThemeDialog"],"sourceRoot":""}