{"version":3,"file":"static/js/870.d38512c2.chunk.js","mappings":"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","sources":["pages/auth/Login.js","sections/auth/LoginForm.js"],"sourcesContent":["import { Link as RouterLink } from \"react-router-dom\";\n// sections\nimport { Stack, Typography, Link } from \"@mui/material\";\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\nimport Login from \"../../sections/auth/LoginForm\";\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }} alignItems=\"center\">\n        <Typography variant=\"h4\">Login to Babble</Typography>\n      </Stack>\n      {/* Form */}\n      <Login />\n      <Stack direction=\"row\" spacing={0.5} alignItems=\"center\" justifyContent={'center'}>\n        <Typography variant=\"body2\">New user?</Typography>\n\n        <Link\n          to={\"/auth/register\"}\n          component={RouterLink}\n          variant=\"subtitle2\"\n        >\n          Create an account\n        </Link>\n      </Stack>\n      <AuthSocial />\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Link as RouterLink } from \"react-router-dom\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { LoginUser } from \"../../redux/slices/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// ----------------------------------------------------------------------\n\nexport default function AuthLoginForm() {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { isLoading } = useSelector((state) => state.auth);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    email: \"babble.io@gmail.com\",\n    password: \"PASSWORD\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data);\n      // submit data to backend\n      dispatch(LoginUser(data));\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError(\"afterSubmit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\n        <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\n          Forgot password?\n        </Link>\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isLoading}\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}\n      >\n        Login\n      </LoadingButton>\n    </FormProvider>\n  );\n}\n"],"names":["LoginPage","_jsxs","_Fragment","children","_jsx","Stack","spacing","sx","mb","position","alignItems","Typography","variant","Login","direction","justifyContent","Link","to","component","RouterLink","AuthSocial","AuthLoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","isLoading","useSelector","state","auth","LoginSchema","Yup","shape","email","required","password","methods","useForm","resolver","yupResolver","defaultValues","reset","setError","handleSubmit","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","LoginUser","error","_objectSpread","message","stop","_x","apply","arguments","FormProvider","afterSubmit","Alert","severity","RHFTextField","name","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","Eye","EyeSlash","my","color","underline","LoadingButton","fullWidth","size","loading","bgcolor","theme","palette","mode"],"sourceRoot":""}