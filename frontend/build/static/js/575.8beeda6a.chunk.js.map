{"version":3,"file":"static/js/575.8beeda6a.chunk.js","mappings":"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","sources":["sections/Dashboard/Contact.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme, styled } from \"@mui/material/styles\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  Stack,\n  Typography,\n  Slide,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@mui/material\";\nimport {\n  Bell,\n  CaretRight,\n  Prohibit,\n  Star,\n  Trash,\n  X,\n} from \"phosphor-react\";\nimport useResponsive from \"../../hooks/useResponsive\";\nimport AntSwitch from \"../../components/AntSwitch\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EmptyCommonGroups, FetchCommonGroups, SelectConversation, ToggleSidebar, UpdateSidebarType, UpdateTab, showSnackbar } from \"../../redux/slices/app\";\nimport { socket } from \"../../socket\";\nimport { toggleSocket } from \"../../redux/slices/conversation\";\n\nconst StyledChatBox = styled(Box)(({ theme }) => ({\n  \"&:hover\": {\n    cursor: \"pointer\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst BlockDialog = ({ open, handleClose }) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>Block this contact</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          Are you sure you want to block this Contact?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleClose}>Yes</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst DeleteChatDialog = ({ open, handleClose }) => {\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>Delete this chat</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          Are you sure you want to delete this chat?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <Button onClick={handleClose}>Yes</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n\n  const { selectedChat, isGroupChat, chat_id, commonGroups } = useSelector((state) => state.app);\n\n  const theme = useTheme();\n\n  const isDesktop = useResponsive(\"up\", \"md\");\n\n  const [openBlock, setOpenBlock] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n\n  const handleCloseBlock = () => {\n    setOpenBlock(false);\n  }\n  const handleCloseDelete = () => {\n    setOpenDelete(false);\n  }\n\n  useEffect(() => {\n    if (!isGroupChat) {\n      dispatch(FetchCommonGroups({ user_id: selectedChat?.users[0]._id }))\n    }\n    else {\n      dispatch(EmptyCommonGroups())\n    }\n  }, [chat_id, isGroupChat])\n\n  const handleGroupSelect = ({ _id }) => {\n    socket.emit(\"leave chat\", chat_id)\n    dispatch(SelectConversation({\n      chat_id: _id,\n      isGroupChat: true\n    }));\n    dispatch(ToggleSidebar());\n    dispatch(UpdateTab({ tab: 1 }));\n    socket.emit(\"join chat\", _id)\n    socket.on(\"connected\", () => {\n      console.log(\"Socket Connected\")\n      dispatch(toggleSocket(true))\n    });\n  }\n\n  const handleChatSelect = ({ _id }) => {\n    socket.emit(\"leave chat\", chat_id)\n    dispatch(SelectConversation({\n      chat_id: _id,\n      isGroupChat: false\n    }));\n    dispatch(ToggleSidebar());\n    dispatch(UpdateTab({ tab: 0 }));\n    socket.emit(\"join chat\", _id)\n    socket.on(\"connected\", () => {\n      console.log(\"Socket Connected\")\n      dispatch(toggleSocket(true))\n    });\n  }\n\n  return (\n    <Box sx={{ width: !isDesktop ? \"100vw\" : 320, maxHeight: \"100vh\" }}>\n      <Stack sx={{ height: \"100%\" }}>\n        <Box\n          sx={{\n            boxShadow: \"0px 0px 2px rgba(0, 0, 0, 0.25)\",\n            width: \"100%\",\n            backgroundColor:\n              theme.palette.mode === \"light\"\n                ? \"#F8FAFF\"\n                : theme.palette.background,\n          }}\n        >\n          <Stack\n            sx={{ height: \"100%\", p: 2 }}\n            direction=\"row\"\n            alignItems={\"center\"}\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Typography variant=\"subtitle2\">Contact Info</Typography>\n            <IconButton\n              onClick={() => {\n                dispatch(ToggleSidebar());\n              }}\n            >\n              <X />\n            </IconButton>\n          </Stack>\n        </Box>\n        <Stack\n          sx={{\n            height: \"100%\",\n            position: \"relative\",\n            flexGrow: 1,\n            overflow: \"scroll\",\n          }}\n          p={3}\n          spacing={3}\n        >\n          <Stack alignItems=\"center\" direction=\"column\" spacing={2}>\n            <Avatar\n              src={(selectedChat?.isGroupChat) ? '' : selectedChat?.users[0].avatar}\n              alt={selectedChat?.chatName}\n              sx={{ height: 108, width: 108 }}\n            />\n            <Stack spacing={0.5}>\n              <Typography variant=\"article\" fontWeight={600}>\n                {selectedChat?.chatName}\n              </Typography>\n            </Stack>\n          </Stack>\n          {/* <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent={\"space-evenly\"}\n          >\n            <Stack alignItems={\"center\"} spacing={1}>\n              <IconButton>\n                <Phone />\n              </IconButton>\n\n              <Typography variant=\"overline\">Voice</Typography>\n            </Stack>\n            <Stack alignItems={\"center\"} spacing={1}>\n              <IconButton>\n                <VideoCamera />\n              </IconButton>\n              <Typography variant=\"overline\">Video</Typography>\n            </Stack>\n          </Stack> */}\n          {\n            !isGroupChat && (\n              <>\n                <Divider />\n                <Stack spacing={0.3}>\n                  <Typography variant=\"article\" fontWeight={600}>\n                    About\n                  </Typography>\n                  <Typography variant=\"body2\" fontWeight={500} paddingLeft={1}>\n                    {selectedChat?.users[0].about}\n                  </Typography>\n                </Stack>\n              </>\n            )\n          }\n          {/*           \n          <Divider />\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent={\"space-between\"}\n          >\n            <Typography variant=\"subtitle2\">Media, Links & Docs</Typography>\n            <Button\n              onClick={() => {\n                dispatch(UpdateSidebarType(\"SHARED\"));\n              }}\n              endIcon={<CaretRight />}\n            >\n              401\n            </Button>\n          </Stack>\n          */}\n          <Divider />\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent={\"space-between\"}\n          >\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n              <Star size={21} />\n              <Typography variant=\"subtitle2\">Starred Messages</Typography>\n            </Stack>\n\n            <IconButton\n              onClick={() => {\n                // dispatch(UpdateSidebarType(\"STARRED\"));\n                dispatch(showSnackbar({ severity: \"info\", message: \"Feature Under Construction\" }))\n              }}\n            >\n              <CaretRight />\n            </IconButton>\n          </Stack>\n          <Divider />\n          <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent={\"space-between\"}\n          >\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n              <Bell size={21} />\n              <Typography variant=\"subtitle2\">Mute Notifications</Typography>\n            </Stack>\n\n            <AntSwitch />\n          </Stack>\n          <Divider />\n          {\n            !isGroupChat ? (\n              <>\n                <Typography variant=\"body2\">{`${commonGroups.length} groups in common`}</Typography>\n                <Stack direction={\"column\"} alignItems={\"center\"} spacing={1} sx={{ marginTop: 0 }}>\n                  {\n                    commonGroups?.map((grp, index) => (\n                      <StyledChatBox\n                        key={index}\n                        sx={{\n                          width: \"100%\",\n                          borderRadius: 1,\n                          backgroundColor: theme.palette.background.paper,\n                        }}\n                        p={1}\n                        onClick={() => handleGroupSelect({ _id: grp._id })}\n                      >\n                        <Stack\n                          direction=\"row\"\n                          alignItems={\"center\"}\n                          spacing={2}\n                        >\n\n                          <Avatar src={\"\"} alt={\"Group\"} />\n                          <Stack spacing={0.3}>\n                            <Typography variant=\"subtitle2\">{grp.chatName}</Typography>\n                          </Stack>\n                        </Stack>\n                      </StyledChatBox>\n                    ))\n                  }\n                </Stack>\n              </>\n            ) : (\n              <>\n                <Typography variant=\"body2\">{`${selectedChat?.users?.length} Members`}</Typography>\n                <Stack direction={\"column\"} alignItems={\"center\"} spacing={1} sx={{ marginTop: 0 }}>\n                  {\n                    selectedChat?.users?.map((userIngrp, index) => (\n                      <StyledChatBox\n                        key={index}\n                        sx={{\n                          width: \"100%\",\n                          borderRadius: 1,\n                          backgroundColor: theme.palette.background.paper,\n                        }}\n                        p={1}\n                      // onClick={\n                      //   () => handleChatSelect({ _id: ._id })\n                      // }\n                      >\n                        <Stack\n                          direction=\"row\"\n                          alignItems={\"center\"}\n                          spacing={2}\n                        >\n\n                          <Avatar src={userIngrp.avatar} alt={userIngrp.firstName} />\n                          <Stack spacing={0.3}>\n                            <Typography variant=\"subtitle2\">{userIngrp.firstName + \" \" + userIngrp.lastName}</Typography>\n                          </Stack>\n                        </Stack>\n                      </StyledChatBox>\n                    ))\n                  }\n                </Stack>\n              </>\n            )\n          }\n          <Divider />\n          <Stack direction=\"row\" alignItems={\"center\"} spacing={2}>\n            <Button\n              onClick={() => {\n                setOpenBlock(true);\n              }}\n              fullWidth\n              startIcon={<Prohibit />}\n              variant=\"outlined\"\n            >\n              Block\n            </Button>\n            <Button\n              onClick={() => {\n                setOpenDelete(true);\n              }}\n              fullWidth\n              startIcon={<Trash />}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n          </Stack>\n        </Stack>\n      </Stack >\n      {openBlock && <BlockDialog open={openBlock} handleClose={handleCloseBlock} />}\n      {openDelete && <DeleteChatDialog open={openDelete} handleClose={handleCloseDelete} />}\n    </Box >\n  );\n};\n\nexport default Contact;\n"],"names":["StyledChatBox","styled","Box","_ref","theme","cursor","Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","BlockDialog","_ref2","open","handleClose","_jsxs","Dialog","TransitionComponent","keepMounted","onClose","children","DialogTitle","DialogContent","DialogContentText","id","DialogActions","Button","onClick","DeleteChatDialog","_ref3","_selectedChat$users","_selectedChat$users2","dispatch","useDispatch","_useSelector","useSelector","state","app","selectedChat","isGroupChat","chat_id","commonGroups","useTheme","isDesktop","useResponsive","_useState","useState","_useState2","_slicedToArray","openBlock","setOpenBlock","_useState3","_useState4","openDelete","setOpenDelete","useEffect","EmptyCommonGroups","FetchCommonGroups","user_id","users","_id","sx","width","maxHeight","Stack","height","boxShadow","backgroundColor","palette","mode","background","p","alignItems","justifyContent","spacing","Typography","variant","IconButton","ToggleSidebar","X","position","flexGrow","overflow","Avatar","src","avatar","alt","chatName","fontWeight","_Fragment","Divider","paddingLeft","about","Star","size","showSnackbar","severity","message","CaretRight","Bell","AntSwitch","concat","length","marginTop","map","userIngrp","index","borderRadius","paper","firstName","lastName","grp","_ref4","socket","emit","SelectConversation","UpdateTab","tab","on","console","log","toggleSocket","handleGroupSelect","fullWidth","startIcon","Prohibit","Trash"],"sourceRoot":""}