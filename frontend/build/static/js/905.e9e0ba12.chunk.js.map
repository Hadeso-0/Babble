{"version":3,"file":"static/js/905.e9e0ba12.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/process.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { domAnimation } from './features-animation.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layoutFeatures,\n    projectionNodeConstructor: HTMLProjectionNode,\n};\n\nexport { domMax };\n"],"names":["_objectDestructuringEmpty","obj","TypeError","warning","invariant","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","e","pointType","arguments","length","undefined","point","changedTouches","x","y","pointFromMouse","extractEventInfo","wrapHandler","handler","eventHandler","listener","button","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","indexOf","push","cancel","index","splice","delete","process","_ref","i","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","secondsToMilliseconds","seconds","addDomEvent","target","eventName","options","passive","addEventListener","removeEventListener","useDomEvent","ref","useEffect","element","current","supportsPointerEvents","isBrowser","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","combineFunctions","a","b","v","pipe","_len","transformers","Array","_key","distance","abs","PanSession","handlers","_this","transformPagePoint","_classCallCheck","this","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","_createClass","value","subtractPoint","_ref2","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","timestampedPoint","lastPoint","time","currentVelocity","Infinity","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","progress","from","to","toFromDifference","mix","calcLength","axis","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","AnimationType","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","mirrorEasing","easing","p","reverseEasing","easeIn","easeOut","easeInOut","isColorString","type","testProp","Boolean","isString","singleColorRegex","test","startsWith","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","_v$match","match","floatRegex","_v$match2","c","alpha","_defineProperty","parseFloat","rgbUnit","number","round","clamp","clampRgbUnit","rgba","parse","red","green","blue","_ref$alpha","alpha$1","sanitize","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","percent","color","hueToRgb","q","t","mixLinearColor","fromExpo","colorTypes","asRGBA","find","concat","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","colorRegex","replace","apply","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_a","_b","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","isArray","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","definition","_definition","keyframes","keyframeValues","_ref$ease","times","_ref$duration","duration","easingFunctions","isEasingArray","state","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","next","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","velocityPerSecond","frameDuration","durationKeys","physicsKeys","isSpringType","keys","some","spring","_ref$restSpeed","restSpeed","_ref$restDelta","restDelta","_objectWithoutProperties","_excluded","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","_ref$keyframes","_ref$power","power","_ref$timeConstant","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","start","stop","animate","driverControls","latest","interpolateFromNumber","_ref2$driver","driver","_ref2$elapsed","_ref2$repeat","repeat","repeatMax","_ref2$repeatType","repeatType","_ref2$repeatDelay","repeatDelay","_ref2$autoplay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_ref2$type","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","delay","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","_options$duration","_options$elapsed","sampleAnimation","pregeneratedKeyframes","_element$animate","_ref$delay","_ref$repeat","_ref$repeatType","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","rotateZ","opacity","backgroundColor","default","isAnimatable","maxDefaults","Set","applyDefaultFilter","_v$slice$split","slice","split","_v$slice$split2","unit","defaultValue","functionRegex","filter","functions","join","defaultValueTypes","numberValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","transition","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","currentAnimation","_ref$bounceStiffness","bounceStiffness","_ref$bounceDamping","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","inertia","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","getDefaultTransition","visualElement","HTMLElement","getProps","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","animationState","setActive","Drag","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","Promise","all","then","_this4","dragKey","toUpperCase","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","props","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","useUnmountEffect","makeRenderlessComponent","hook","pan","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","useRef","useContext","MotionConfigContext","updateHandlers","groupDragControls","dragControls","useConstant","subscribe","addListeners","usePresence","context","PresenceContext","onExitComplete","register","id","useId","pixelsToPercent","pixels","correctBorderRadius","correct","node","px","isCSSVariable","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","resolved","getComputedStyle","getPropertyValue","trim","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","includes","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","_inherits","_super","_createSuper","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","globalProjectionState","hasEverUpdated","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","getStack","members","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","measureLayout","_usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","shallowCompare","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","eventManagers","clear","passiveEffect","resolve","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","valueTypes","findValueType","resolveVariant","custom","resolveVariantFromProps","getCurrent","setMotionValue","hasValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","isWillChangeMotionValue","isMotionValue","appearStoreId","optimizedAppearDataAttribute","camelToDash","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","valueTarget","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","shouldReduceMotion","transformProps","appearId","MotionAppearAnimations","animationId","handoffOptimizedAppearAnimation","sortNodePosition","variantPriorityOrder","Animate","InView","Focus","Hover","Tap","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","exit","presenceContext","createHoverEvent","isNodeOrChild","parentElement","env","warned","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","rootMargin","margin","_ref2$amount","amount","once","threshold","isIntersecting","isInView","hasEnteredView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","_ref3$fallback","message","console","warn","BoundingBoxDimension","gestureAnimations","inView","whileInView","_ref$viewport","viewport","tap","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","onPointerUp","onPointerCancel","focus","whileFocus","hover","onHoverStart","onHoverEnd","whileHover","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","assign","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","featureDefinitions","numFeatures","propEventHandlers","VisualElement","reducedMotionConfig","visualState","children","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","scheduleRender","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","setProps","_c","unmount","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","preloadedFeatures","projectionId","ProjectionNodeConstructor","initialLayoutGroupConfig","features","_featureDefinitions$n","isEnabled","Component","createElement","layoutScroll","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","variants","getClosestVariantNode","numVariantProps","variantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_a2","args","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","isMounted","transformValues","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","buildHTMLStyles","styleProp","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","tagName","_get","_getPrototypeOf","domAnimation","renderer","isSVGComponent","enableHardwareAcceleration","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_d","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","domMax","projectionNodeConstructor"],"sourceRoot":""}