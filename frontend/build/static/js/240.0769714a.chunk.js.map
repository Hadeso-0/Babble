{"version":3,"file":"static/js/240.0769714a.chunk.js","mappings":"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","sources":["components/hook-form/FormProvider.js","components/Image/Image.js","components/upload/preview/AvatarPreview.js","components/upload/UploadAvatar.js","components/hook-form/RHFUpload.js","components/hook-form/RHFTextField.js","sections/auth/NewPasswordForm.js","pages/auth/NewPassword.js","../node_modules/phosphor-react/src/icons/CaretLeft.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// form\nimport { FormProvider as Form } from 'react-hook-form';\n\n// ----------------------------------------------------------------------\n\nFormProvider.propTypes = {\n  children: PropTypes.node,\n  methods: PropTypes.object,\n  onSubmit: PropTypes.func,\n};\n\nexport default function FormProvider({ children, onSubmit, methods }) {\n  return (\n    <Form {...methods}>\n      <form onSubmit={onSubmit}>{children}</form>\n    </Form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef(\n  ({ disabledEffect = false, effect = 'blur', sx, ...other }, ref) => {\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        sx={{\n          lineHeight: 1,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          '& .wrapper': {\n            width: 1,\n            height: 1,\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nImage.propTypes = {\n  sx: PropTypes.object,\n  effect: PropTypes.string,\n  disabledEffect: PropTypes.bool,\n};\n\nexport default Image;\n","import PropTypes from 'prop-types';\n//\nimport Image from '../../Image';\n\n// ----------------------------------------------------------------------\n\nAvatarPreview.propTypes = {\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function AvatarPreview({ file }) {\n  if (!file) {\n    return null;\n  }\n\n  const imgUrl = typeof file === 'string' ? file : file.preview;\n\n  return (\n    <Image\n      alt=\"avatar\"\n      src={imgUrl}\n      sx={{\n        zIndex: 8,\n        overflow: 'hidden',\n        borderRadius: '50%',\n        position: 'absolute',\n        width: `calc(100% - 16px)`,\n        height: `calc(100% - 16px)`,\n      }}\n    />\n  );\n}\n","import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\n// @mui\nimport { Typography } from \"@mui/material\";\nimport { styled, alpha } from \"@mui/material/styles\";\n//\nimport AvatarPreview from \"./preview/AvatarPreview\";\nimport { Image } from \"phosphor-react\";\n\n// ----------------------------------------------------------------------\n\nconst StyledDropZone = styled(\"div\")(({ theme }) => ({\n  width: 144,\n  height: 144,\n  margin: \"auto\",\n  display: \"flex\",\n  cursor: \"pointer\",\n  overflow: \"hidden\",\n  borderRadius: \"50%\",\n  alignItems: \"center\",\n  position: \"relative\",\n  justifyContent: \"center\",\n  border: `1px dashed ${alpha(theme.palette.grey[500], 0.32)}`,\n}));\n\nconst StyledPlaceholder = styled(\"div\")(({ theme }) => ({\n  zIndex: 7,\n  display: \"flex\",\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  width: `calc(100% - 16px)`,\n  height: `calc(100% - 16px)`,\n  color: theme.palette.text.disabled,\n  backgroundColor: theme.palette.background.neutral,\n  transition: theme.transitions.create(\"opacity\", {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n}));\n\n// ----------------------------------------------------------------------\n\nUploadAvatar.propTypes = {\n  sx: PropTypes.object,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.node,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default function UploadAvatar({\n  error,\n  file,\n  disabled,\n  helperText,\n  sx,\n  ...other\n}) {\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n  } = useDropzone({\n    multiple: false,\n    disabled,\n    ...other,\n  });\n\n  const hasFile = !!file;\n\n  const isError = isDragReject || !!error;\n\n  return (\n    <>\n      <StyledDropZone\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && {\n            opacity: 0.72,\n          }),\n          ...(isError && {\n            borderColor: \"error.light\",\n            ...(hasFile && {\n              bgcolor: \"error.lighter\",\n            }),\n          }),\n          ...(disabled && {\n            opacity: 0.48,\n            pointerEvents: \"none\",\n          }),\n          ...(hasFile && {\n            \"&:hover\": {\n              \"& .placeholder\": {\n                opacity: 1,\n              },\n            },\n          }),\n          ...sx,\n        }}\n      >\n        <input {...getInputProps()} />\n\n        {hasFile && <AvatarPreview file={file} />}\n\n        <StyledPlaceholder\n          className=\"placeholder\"\n          sx={{\n            \"&:hover\": {\n              opacity: 0.72,\n            },\n            ...(hasFile && {\n              zIndex: 9,\n              opacity: 0,\n              color: \"common.white\",\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.64),\n            }),\n            ...(isError && {\n              color: \"error.main\",\n              bgcolor: \"error.lighter\",\n            }),\n          }}\n        >\n          <Image />\n\n          <Typography variant=\"caption\">\n            {file ? \"Update photo\" : \"Upload photo\"}\n          </Typography>\n        </StyledPlaceholder>\n      </StyledDropZone>\n\n      {helperText && helperText}\n    </>\n  );\n}","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { FormHelperText } from '@mui/material';\n//\nimport { UploadAvatar } from '../upload';\n\n// ----------------------------------------------------------------------\n\nRHFUploadAvatar.propTypes = {\n  name: PropTypes.string,\n};\n\n// ----------------------------------------------------------------------\n\nexport function RHFUploadAvatar({ name, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <div>\n          <UploadAvatar\n            accept={{\n              'image/*': [],\n            }}\n            error={!!error}\n            file={field.value}\n            {...other}\n          />\n\n          {!!error && (\n            <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n              {error.message}\n            </FormHelperText>\n          )}\n        </div>\n      )}\n    />\n  );\n}\n\n","import PropTypes from 'prop-types';\n// form\nimport { useFormContext, Controller } from 'react-hook-form';\n// @mui\nimport { TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nRHFTextField.propTypes = {\n  name: PropTypes.string,\n  helperText: PropTypes.node,\n};\n\nexport default function RHFTextField({ name, helperText, ...other }) {\n  const { control } = useFormContext();\n\n  return (\n    <Controller\n      name={name}\n      control={control}\n      render={({ field, fieldState: { error } }) => (\n        <TextField\n          {...field}\n          fullWidth\n          \n          value={typeof field.value === 'number' && field.value === 0 ? '' : field.value}\n          error={!!error}\n          helperText={error ? error?.message : helperText}\n          {...other}\n        />\n      )}\n    />\n  );\n}\n","import { useState } from 'react';\nimport * as Yup from 'yup';\n// form\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { Stack, IconButton, InputAdornment, Button } from '@mui/material';\n// components\nimport FormProvider, { RHFTextField } from '../../components/hook-form';\nimport { Eye, EyeSlash } from 'phosphor-react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { NewPassword } from '../../redux/slices/auth';\n\n// ----------------------------------------------------------------------\n\nexport default function NewPasswordForm() {\n  const dispatch = useDispatch();\n  const [queryParameters] = useSearchParams();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const VerifyCodeSchema = Yup.object().shape({\n\n    password: Yup.string()\n      .min(6, 'Password must be at least 6 characters')\n      .required('Password is required'),\n    passwordConfirm: Yup.string()\n      .required('Confirm password is required')\n      .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n  });\n\n  const defaultValues = {\n    password: '',\n    passwordConfirm: '',\n  };\n\n  const methods = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      //   Send API Request\n      dispatch(NewPassword({ ...data, token: queryParameters.get('token') }));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <RHFTextField\n          name=\"passwordConfirm\"\n          label=\"Confirm New Password\"\n          type={showPassword ? 'text' : 'password'}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n\n          sx={{\n            mt: 3,\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            \"&:hover\": {\n              bgcolor: \"text.primary\",\n              color: (theme) =>\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            },\n          }}\n        >\n          Update Password\n        </Button>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Stack, Typography, Link } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { CaretLeft } from \"phosphor-react\";\nimport NewPasswordForm from \"../../sections/auth/NewPasswordForm\";\n\nconst NewPassword = () => {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h3\" paragraph>\n          Reset Password\n        </Typography>\n\n        <Typography sx={{ color: \"text.secondary\", mb: 5 }}>\n          Please set your new password.\n        </Typography>\n      </Stack>\n\n      {/* NewPasswordForm */}\n\n      <NewPasswordForm />\n\n      <Link\n        component={RouterLink}\n        to={\"/auth/login\"}\n        color=\"inherit\"\n        variant=\"subtitle2\"\n        sx={{\n          mt: 3,\n          mx: \"auto\",\n          alignItems: \"center\",\n          display: \"inline-flex\",\n        }}\n      >\n        <CaretLeft size={24} />\n        Return to sign in\n      </Link>\n    </>\n  );\n};\n\nexport default NewPassword;\n","/* GENERATED FILE */\nimport React, { forwardRef } from \"react\";\n\nimport {\n  IconWeight,\n  IconProps,\n  PaintFunction,\n  renderPathForWeight,\n} from \"../lib\";\nimport IconBase, { RenderFunction } from \"../lib/IconBase\";\n\nconst pathsByWeight = new Map<IconWeight, PaintFunction>();\n\npathsByWeight.set(\"bold\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"24\"\n    />\n  </>\n));\n\npathsByWeight.set(\"duotone\", (color: string) => (\n  <>\n    <polygon points=\"160 208 80 128 160 48 160 208\" opacity=\"0.2\" />\n    <polygon\n      points=\"160 208 80 128 160 48 160 208\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\npathsByWeight.set(\"fill\", () => (\n  <>\n    <path d=\"M163.1,40.6a8.4,8.4,0,0,0-8.8,1.7l-80,80a8.1,8.1,0,0,0,0,11.4l80,80A8.3,8.3,0,0,0,160,216a8.5,8.5,0,0,0,3.1-.6A8,8,0,0,0,168,208V48A8,8,0,0,0,163.1,40.6Z\" />\n  </>\n));\n\npathsByWeight.set(\"light\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"12\"\n    />\n  </>\n));\n\npathsByWeight.set(\"thin\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"8\"\n    />\n  </>\n));\n\npathsByWeight.set(\"regular\", (color: string) => (\n  <>\n    <polyline\n      points=\"160 208 80 128 160 48\"\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"16\"\n    />\n  </>\n));\n\nconst renderPath: RenderFunction = (weight: IconWeight, color: string) =>\n  renderPathForWeight(weight, color, pathsByWeight);\n\nconst CaretLeft = forwardRef<SVGSVGElement, IconProps>((props, ref) => (\n  <IconBase ref={ref} {...props} renderPath={renderPath} />\n));\n\nCaretLeft.displayName = \"CaretLeft\";\n\nexport default CaretLeft;\n"],"names":["FormProvider","_ref","children","onSubmit","methods","_jsx","Form","_objectSpread","forwardRef","ref","_ref$disabledEffect","disabledEffect","_ref$effect","effect","sx","other","_objectWithoutProperties","_excluded","content","Box","component","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","width","height","objectFit","lineHeight","display","overflow","position","backgroundSize","AvatarPreview","file","imgUrl","preview","Image","alt","src","zIndex","borderRadius","StyledDropZone","styled","theme","margin","cursor","alignItems","justifyContent","border","concat","alpha","palette","grey","StyledPlaceholder","_ref2","flexDirection","color","text","disabled","backgroundColor","background","neutral","transition","transitions","create","easing","easeInOut","duration","shorter","UploadAvatar","_ref3","error","helperText","_useDropzone","useDropzone","multiple","getRootProps","getInputProps","isDragActive","hasFile","isError","isDragReject","_jsxs","_Fragment","opacity","borderColor","bgcolor","pointerEvents","className","Typography","variant","RHFUploadAvatar","name","control","useFormContext","Controller","render","field","fieldState","accept","value","FormHelperText","px","textAlign","message","RHFTextField","TextField","fullWidth","NewPasswordForm","dispatch","useDispatch","_useSearchParams","useSearchParams","queryParameters","_slicedToArray","_useState","useState","_useState2","showPassword","setShowPassword","VerifyCodeSchema","Yup","shape","password","min","required","passwordConfirm","oneOf","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","NewPassword","token","get","console","stop","_x","apply","arguments","Stack","spacing","label","type","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","Eye","EyeSlash","Button","size","mt","mb","paragraph","Link","RouterLink","to","mx","CaretLeft","pathsByWeight","Map","set","React","points","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","renderPath","weight","renderPathForWeight","props","IconBase","Object","assign","displayName"],"sourceRoot":""}