{"version":3,"file":"static/js/265.040d48aa.chunk.js","mappings":"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","sources":["components/hook-form/RHFCodes.js","sections/auth/VerifyForm.js","pages/auth/Verify.js","sections/auth/LoginForm.js"],"sourcesContent":["\nimport { useRef } from \"react\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport { Stack, TextField } from \"@mui/material\";\n\n\nexport default function RHFCodes({ keyName = \"\", inputs = [], ...other }) {\n  const codesRef = useRef(null);\n\n  const { control } = useFormContext();\n\n  const handleChangeWithNextField = (event, handleChange) => {\n    const { maxLength, value, name } = event.target;\n\n    const fieldIndex = name.replace(keyName, \"\");\n\n    const fieldIntIndex = Number(fieldIndex);\n\n    const nextfield = document.querySelector(\n      `input[name=${keyName}${fieldIntIndex + 1}]`\n    );\n\n    if (value.length > maxLength) {\n      event.target.value = value[0];\n    }\n\n    if (value.length >= maxLength && fieldIntIndex < 6 && nextfield !== null) {\n      nextfield.focus();\n    }\n\n    handleChange(event);\n  };\n\n  return (\n    <Stack direction=\"row\" spacing={2} justifyContent=\"center\" ref={codesRef}>\n      {inputs.map((name, index) => (\n        <Controller\n          key={name}\n          name={`${keyName}${index + 1}`}\n          control={control}\n          render={({ field, fieldState: { error } }) => (\n            <TextField\n              {...field}\n              error={!!error}\n              autoFocus={index === 0}\n              placeholder=\"-\"\n              onChange={(event) => {\n                handleChangeWithNextField(event, field.onChange);\n              }}\n              onFocus={(event) => event.currentTarget.select()}\n              InputProps={{\n                sx: {\n                  width: { xs: 36, sm: 56 },\n                  height: { xs: 36, sm: 56 },\n                  \"& input\": { p: 0, textAlign: \"center\" },\n                },\n              }}\n              inputProps={{\n                maxLength: 1,\n                type: \"number\",\n              }}\n              {...other}\n            />\n          )}\n        />\n      ))}\n    </Stack>\n  );\n}\n","import { useState } from \"react\";\nimport * as Yup from \"yup\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Stack, Button } from \"@mui/material\";\n// components\nimport FormProvider from \"../../components/hook-form\";\nimport RHFCodes from \"../../components/hook-form/RHFCodes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { VerifyEmail } from \"../../redux/slices/auth\";\n\n// ----------------------------------------------------------------------\n\nexport default function VerifyForm() {\n  const dispatch = useDispatch();\n  const { email } = useSelector((state) => state.auth);\n  const VerifyCodeSchema = Yup.object().shape({\n    code1: Yup.string().required(\"Code is required\"),\n    code2: Yup.string().required(\"Code is required\"),\n    code3: Yup.string().required(\"Code is required\"),\n    code4: Yup.string().required(\"Code is required\"),\n    code5: Yup.string().required(\"Code is required\"),\n    code6: Yup.string().required(\"Code is required\"),\n  });\n\n  const defaultValues = {\n    code1: \"\",\n    code2: \"\",\n    code3: \"\",\n    code4: \"\",\n    code5: \"\",\n    code6: \"\",\n  };\n\n  const methods = useForm({\n    mode: \"onChange\",\n    resolver: yupResolver(VerifyCodeSchema),\n    defaultValues,\n  });\n\n  const {\n    handleSubmit,\n    formState: { isSubmitting, errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      //   Send API Request\n      dispatch(\n        VerifyEmail({\n          email,\n          otp: `${data.code1}${data.code2}${data.code3}${data.code4}${data.code5}${data.code6}`,\n        })\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        <RHFCodes\n          keyName=\"code\"\n          inputs={[\"code1\", \"code2\", \"code3\", \"code4\", \"code5\", \"code6\"]}\n        />\n\n        <Button\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            \"&:hover\": {\n              bgcolor: \"text.primary\",\n              color: (theme) =>\n                theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n            },\n          }}\n        >\n          Verify\n        </Button>\n      </Stack>\n    </FormProvider>\n  );\n}\n","import { Link as RouterLink } from \"react-router-dom\";\n// sections\nimport { Stack, Typography, Link } from \"@mui/material\";\nimport AuthSocial from \"../../sections/auth/AuthSocial\";\nimport Login from \"../../sections/auth/LoginForm\";\nimport VerifyForm from \"../../sections/auth/VerifyForm\";\n\n// ----------------------------------------------------------------------\n\nexport default function LoginPage() {\n  return (\n    <>\n      <Stack spacing={2} sx={{ mb: 5, position: \"relative\" }}>\n        <Typography variant=\"h4\">Please Verify OTP</Typography>\n\n        <Stack direction=\"row\" spacing={0.5}>\n          <Typography variant=\"body2\">\n            Sent to email {`()`}\n          </Typography>\n        </Stack>\n      </Stack>\n      {/* Form */}\n      <VerifyForm />\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { Link as RouterLink } from \"react-router-dom\";\n// form\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n// @mui\nimport { Link, Stack, Alert, IconButton, InputAdornment } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\n// components\nimport FormProvider, { RHFTextField } from \"../../components/hook-form\";\nimport { Eye, EyeSlash } from \"phosphor-react\";\nimport { LoginUser } from \"../../redux/slices/auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// ----------------------------------------------------------------------\n\nexport default function AuthLoginForm() {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { isLoading } = useSelector((state) => state.auth);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .required(\"Email is required\")\n      .email(\"Email must be a valid email address\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  const defaultValues = {\n    email: \"babble.io@gmail.com\",\n    password: \"PASSWORD\",\n  };\n\n  const methods = useForm({\n    resolver: yupResolver(LoginSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    setError,\n    handleSubmit,\n    formState: { errors },\n  } = methods;\n\n  const onSubmit = async (data) => {\n    try {\n      console.log(data);\n      // submit data to backend\n      dispatch(LoginUser(data));\n    } catch (error) {\n      console.error(error);\n      reset();\n      setError(\"afterSubmit\", {\n        ...error,\n        message: error.message,\n      });\n    }\n  };\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Stack spacing={3}>\n        {!!errors.afterSubmit && (\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\n        )}\n\n        <RHFTextField name=\"email\" label=\"Email address\" />\n\n        <RHFTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? \"text\" : \"password\"}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\"\n                sx={{\n                  \"height\": \"1em\",\n                  \"overflow\": \"visible\"\n                }}>\n                <IconButton\n                  onClick={() => setShowPassword(!showPassword)}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Eye /> : <EyeSlash />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </Stack>\n\n      <Stack alignItems=\"flex-end\" sx={{ my: 2 }}>\n        <Link component={RouterLink} to=\"/auth/reset-password\" variant=\"body2\" color=\"inherit\" underline=\"always\">\n          Forgot password?\n        </Link>\n      </Stack>\n\n      <LoadingButton\n        fullWidth\n        color=\"inherit\"\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n        loading={isLoading}\n        sx={{\n          bgcolor: \"text.primary\",\n          color: (theme) =>\n            theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          \"&:hover\": {\n            bgcolor: \"text.primary\",\n            color: (theme) =>\n              theme.palette.mode === \"light\" ? \"common.white\" : \"grey.800\",\n          },\n        }}\n      >\n        Login\n      </LoadingButton>\n    </FormProvider>\n  );\n}\n"],"names":["RHFCodes","_ref","_ref$keyName","keyName","_ref$inputs","inputs","other","_objectWithoutProperties","_excluded","codesRef","useRef","control","useFormContext","_jsx","Stack","direction","spacing","justifyContent","ref","children","map","name","index","Controller","concat","render","_ref2","field","error","fieldState","TextField","_objectSpread","autoFocus","placeholder","onChange","event","handleChange","_event$target","target","maxLength","value","fieldIndex","replace","fieldIntIndex","Number","nextfield","document","querySelector","length","focus","handleChangeWithNextField","onFocus","currentTarget","select","InputProps","sx","width","xs","sm","height","p","textAlign","inputProps","type","VerifyForm","dispatch","useDispatch","email","useSelector","state","auth","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","methods","useForm","mode","resolver","yupResolver","defaultValues","handleSubmit","_methods$formState","formState","onSubmit","isSubmitting","errors","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","VerifyEmail","otp","console","stop","_x","apply","arguments","FormProvider","_jsxs","Button","fullWidth","size","variant","mt","bgcolor","color","theme","palette","LoginPage","_Fragment","mb","position","Typography","AuthLoginForm","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","isLoading","LoginSchema","password","reset","setError","log","LoginUser","message","afterSubmit","Alert","severity","RHFTextField","label","endAdornment","InputAdornment","IconButton","onClick","edge","Eye","EyeSlash","alignItems","my","Link","component","RouterLink","to","underline","LoadingButton","loading"],"sourceRoot":""}